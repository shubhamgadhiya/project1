{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\day_10_08\\\\reactapi\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './App.css';\n// import Form from './Components/Form';\n// import Login from './Components/Login';\n// import Protected from './Components/Protected';\n// import { BrowserRouter, Route, Routes } from 'react-router-dom';\n// import Navbar from './Components/Navbar';\n\n// function App() {\n//   return (\n//     <BrowserRouter>\n//     <Navbar/>\n//     <Routes>\n//       <Route path='/' element={<h1>home</h1>}/>\n//       <Route path='/Register' element={<Form/>}/>\n//       <Route path='/Login' element={ <Login/>}/>\n//       <Route path=\"/protected\" element={<Protected />}/>\n//     </Routes>\n\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Register from './Register';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Initialize with false or from your authentication logic\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Switch","Route","Navbar","Home","Register","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","component","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/day_10_08/reactapi/src/App.js"],"sourcesContent":["// import React from 'react';\n// import './App.css';\n// import Form from './Components/Form';\n// import Login from './Components/Login';\n// import Protected from './Components/Protected';\n// import { BrowserRouter, Route, Routes } from 'react-router-dom';\n// import Navbar from './Components/Navbar';\n\n// function App() {\n//   return (\n//     <BrowserRouter>\n//     <Navbar/>\n//     <Routes>\n//       <Route path='/' element={<h1>home</h1>}/>\n//       <Route path='/Register' element={<Form/>}/>\n//       <Route path='/Login' element={ <Login/>}/>\n//       <Route path=\"/protected\" element={<Protected />}/>\n//     </Routes>\n\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Register from './Register';\nimport Login from './Login';\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Initialize with false or from your authentication logic\n\n  return (\n    <Router>\n      <Navbar isLoggedIn={isLoggedIn} />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/login\" component={Login} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,oBACEU,OAAA,CAACR,MAAM;IAAAa,QAAA,gBACLL,OAAA,CAACL,MAAM;MAACQ,UAAU,EAAEA;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCT,OAAA,CAACP,MAAM;MAAAY,QAAA,gBACLL,OAAA,CAACN,KAAK;QAACgB,IAAI,EAAC,GAAG;QAACC,KAAK;QAACC,SAAS,EAAEhB;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCT,OAAA,CAACN,KAAK;QAACgB,IAAI,EAAC,WAAW;QAACE,SAAS,EAAEf;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CT,OAAA,CAACN,KAAK;QAACgB,IAAI,EAAC,QAAQ;QAACE,SAAS,EAAEd;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACP,EAAA,CAbID,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAeT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\day_10_08\\\\reactapi\\\\src\\\\Components\\\\Employee.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport Tooltip from '@mui/material/Tooltip';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { Box } from '@mui/material';\n// import jsonData from './Data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Employee = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [editedPerson, setEditedPerson] = useState({});\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [editedPersonData, setEditedPersonData] = useState({});\n  const [usernameError, setUsernameError] = useState('');\n  const [fnameError, setFnameError] = useState('');\n  const [lnameError, setLnameError] = useState('');\n  const [mobileNoError, setMobileNoError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [countrydata, setCountrydata] = useState(\"\");\n  const [statedata, setStatedata] = useState(\"\");\n  const [citydata, setCitydata] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [lnameSortOrder, setLnameSortOrder] = useState('asc');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const validateUsername = value => {\n    if (!value.match(/^[A-Za-z]/)) {\n      setUsernameError('Username must start with a letter!');\n    } else {\n      setUsernameError('');\n    }\n  };\n  const validateFname = value => {\n    if (!value.match(/^[A-Za-z]+$/)) {\n      setFnameError('Only letters are allowed!');\n    } else {\n      setFnameError('');\n    }\n  };\n  const validateLname = value => {\n    if (!value.match(/^[A-Za-z]+$/)) {\n      setLnameError('Only letters are allowed!');\n    } else {\n      setLnameError('');\n    }\n  };\n  const validatePassword = value => {\n    if (!value.match(/^[0-9]{1,}$/)) {\n      setPasswordError('only Number ');\n    } else {\n      setPasswordError('');\n    }\n  };\n  const validateMobileNo = value => {\n    if (!value.match(/^[0-9]{10}$/)) {\n      setMobileNoError('Mobile Number must be a 10-digit number!');\n    } else {\n      setMobileNoError('');\n    }\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/countries').then(response => setCountries(response.data)).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    if (selectedCountry) {\n      axios.get(`http://localhost:5000/states/${selectedCountry.id}`).then(response => setStates(response.data)).catch(error => console.error(error));\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    if (selectedState) {\n      axios.get(`http://localhost:5000/cities/${selectedState.id}`).then(response => setCities(response.data)).catch(error => console.error(error));\n    }\n  }, [selectedState]);\n  const sortDataByFirstName = () => {\n    const sortedData = [...data];\n    sortedData.sort((a, b) => {\n      if (sortOrder === 'asc') {\n        return a.fname.localeCompare(b.fname);\n      } else {\n        return b.fname.localeCompare(a.fname);\n      }\n    });\n    setData(sortedData);\n  };\n  useEffect(() => {\n    sortDataByFirstName();\n  }, [sortOrder]);\n  const toggleSortOrder = () => {\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n  const sortDataByLastName = () => {\n    const sortedData = [...data];\n    sortedData.sort((a, b) => {\n      if (lnameSortOrder === 'asc') {\n        return a.lname.localeCompare(b.lname);\n      } else {\n        return b.lname.localeCompare(a.lname);\n      }\n    });\n    setData(sortedData);\n  };\n  useEffect(() => {\n    sortDataByLastName();\n  }, [lnameSortOrder]);\n  const toggleLnameSortOrder = () => {\n    setLnameSortOrder(lnameSortOrder === 'asc' ? 'desc' : 'asc');\n  };\n  const fetchPersonData = () => {\n    const token = localStorage.getItem('userToken');\n    if (token) {\n      const config = {\n        headers: {\n          Authorization: `${token}`\n        }\n      };\n      axios.get(\"http://localhost:5000/api/form\", config).then(response => setData(response.data)).catch(error => console.log(error));\n    }\n    ;\n  };\n  useEffect(() => {\n    fetchPersonData();\n  }, []);\n  const handleEdit = person => {\n    setEditedPerson({\n      ...person\n    });\n    const formattedDate = moment(person.dob, 'YYYY-MM-DD').format('YYYY-MM-DD');\n    setSelectedDate(formattedDate);\n    setSelectedImage(person.image);\n    setSelectedCountry(\"\");\n    setSelectedState(\"\");\n    setSelectedCity(\"\");\n    setCountrydata(person.countrydata);\n    setStatedata(person.statedata);\n    setCitydata(person.citydata);\n    setIsPopupOpen(true);\n    setEditedPersonData(person);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleDelete = personId => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this person?\");\n    if (confirmDelete) {\n      axios.delete(`http://localhost:5000/api/form/${personId}`).then(response => {\n        setData(prevData => prevData.filter(person => person._id !== personId));\n      }).catch(error => console.log(error));\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedPerson(prevPerson => ({\n      ...prevPerson,\n      [name]: value\n    }));\n  };\n  const handleImageUpload = e => {\n    setSelectedImage(e.target.files[0]);\n  };\n  const handleSave = () => {\n    const formData = new FormData();\n    formData.append('username', editedPerson.username);\n    formData.append('fname', editedPerson.fname);\n    formData.append('lname', editedPerson.lname);\n    formData.append('password', editedPerson.password);\n    formData.append('image', selectedImage);\n    formData.append('dob', selectedDate);\n    formData.append('mobileno', editedPerson.mobileno);\n    formData.append('countrydata', countrydata);\n    formData.append('statedata', statedata);\n    formData.append('citydata', citydata);\n    const hasErrors = usernameError || fnameError || lnameError || passwordError || mobileNoError\n    // !editedPerson.selectedCountry ||\n    // !editedPerson.selectedState ||\n    // !editedPerson.selectedCity;\n    ;\n\n    if (hasErrors) {\n      alert('Please fill the required details correctly!');\n      return;\n    }\n    axios.put(`http://localhost:5000/api/form/${editedPerson._id}`, formData).then(response => {\n      setOpen(false);\n      fetchPersonData();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleCountryChange = event => {\n    const parsedValue = JSON.parse(event.target.value);\n    setSelectedCountry(parsedValue);\n    setCountrydata(parsedValue.name);\n    setSelectedState(null);\n    setStatedata(null);\n    setSelectedCity(null);\n    setCitydata(null);\n  };\n  const handleStateChange = event => {\n    const parsedValue = JSON.parse(event.target.value);\n    setSelectedState(parsedValue);\n    setStatedata(parsedValue.name);\n    setSelectedCity(null);\n    setCitydata(null);\n  };\n  const handleCityChange = event => {\n    const parsedValue = JSON.parse(event.target.value);\n    setSelectedCity(parsedValue);\n    setCitydata(parsedValue.name);\n  };\n\n  //   return (\n  //     <>\n\n  //       <h1>Person Table</h1>\n\n  //           <Dialog open={open} style={{width:\"100%\"}}>\n  //         <div className=\"registration-form1\">\n\n  //             <DialogTitle><h2>Edit Person</h2></DialogTitle>\n  //             <DialogContent >\n  //               <Box my={1} />\n\n  //    <div>\n  //       <FormControl  style={{width:\"50%\", display:\"flex\"}}>\n  //         <InputLabel>Select Country:</InputLabel>\n  //         <Select value={countrydata} onChange={handleCountryChange}>\n  //           <MenuItem value={countrydata}>{countrydata}</MenuItem>\n  //           {countries.map((country) => (\n  //             <MenuItem key={country.id} value={JSON.stringify(country)}>\n  //               {country.name}\n  //             </MenuItem>\n  //           ))}\n  //         </Select>\n  //       </FormControl>\n\n  //       <FormControl  style={{width:\"50%\", display:\"flex\"}}>\n  //         <InputLabel>Select State:</InputLabel>\n  //         <Select value={statedata} onChange={handleStateChange}>\n  //           <MenuItem value={statedata}>{statedata}</MenuItem>\n  //           {states.map((state) => (\n  //             <MenuItem key={state.id} value={JSON.stringify(state)}>\n  //               {state.name}\n  //             </MenuItem>\n  //           ))}\n  //         </Select>\n  //       </FormControl>\n\n  //       <FormControl  style={{width:\"50%\", display:\"flex\"}}>\n  //         <InputLabel>Select City:</InputLabel>\n  //         <Select value={citydata} onChange={handleCityChange}>\n  //           <MenuItem value={citydata}>{citydata}</MenuItem>\n  //           {cities.map((city) => (\n  //             <MenuItem key={city.id} value={JSON.stringify(city)}>\n  //               {city.name}\n  //             </MenuItem>\n  //           ))}\n  //         </Select>\n  //       </FormControl>\n  //     </div>\n\n  //               <TextField\n  //                 margin=\"dense\"\n  //                 name=\"username\"\n  //                 label=\"Username:\"\n  //                 type=\"text\"\n  //                 fullWidth\n  //                 variant=\"standard\"\n  //                 value={editedPerson.username || \"\"}\n  //                 onChange={(e) => { handleInputChange(e); validateUsername(e.target.value); }} />\n  //               {usernameError && <p style={{ color: 'red' }}>{usernameError}</p>}\n\n  //               <TextField\n  //                 margin=\"dense\"\n  //                 label=\" First Name:\"\n  //                 type=\"text\"\n  //                 fullWidth\n  //                 variant=\"standard\"\n  //                 name=\"fname\"\n  //                 value={editedPerson.fname || \"\"}\n  //                 onChange={(e) => { handleInputChange(e); validateFname(e.target.value); }} />\n  //               {fnameError && <p style={{ color: 'red' }}>{fnameError}</p>}\n\n  //               <TextField\n  //                 margin=\"dense\"\n  //                 label=\"  Last Name:\"\n  //                 type=\"text\"\n  //                 fullWidth\n  //                 variant=\"standard\"\n  //                 name=\"lname\"\n  //                 value={editedPerson.lname || \"\"}\n  //                 onChange={(e) => { handleInputChange(e); validateLname(e.target.value); }} />\n  //               {lnameError && <p style={{ color: 'red' }}>{lnameError}</p>}\n\n  //               <TextField\n  //                 margin=\"dense\"\n  //                 label=\" Password:\"\n  //                 type=\"text\"\n  //                 fullWidth\n  //                 variant=\"standard\"\n  //                 name=\"password\"\n  //                 value={editedPerson.password}\n  //                 onChange={(e) => { handleInputChange(e); validatePassword(e.target.value); }} />\n  //               {passwordError && <p style={{ color: 'red' }}>{passwordError}</p>}\n\n  //               <TextField\n  //                 margin=\"dense\"\n  //                 id=\"outlined-multiline-static\"\n  //                 label=\"upload image\"\n\n  //                 type=\"file\"\n  //                 fullWidth\n  //                 variant=\"standard\"\n  //                 accept=\"image/*\"\n  //                 name=\"image\" focused \n  //                 onChange={handleImageUpload} />\n  //               <img style={{ width: \"100px\" }} src={`http://localhost:3000/resources/${selectedImage}`} />\n\n  //               <TextField\n  //                 margin=\"dense\"\n  //                 label=\" Date of Birth:\"\n  //                 type=\"date\"\n  //                 fullWidth\n  //                 variant=\"standard\"\n  //                 name=\"dob\"\n  //                 value={selectedDate}\n  //                 onChange={(e) => setSelectedDate(e.target.value)} />\n\n  //               <TextField\n  //                 margin=\"dense\"\n  //                 label=\" Mobile No:\"\n  //                 type=\"text\"\n  //                 fullWidth\n  //                 variant=\"standard\"\n  //                 name=\"mobileno\"\n  //                 value={editedPerson.mobileno || \"\"}\n  //                 onChange={(e) => {\n  //                   handleInputChange(e); validateMobileNo(e.target.value);\n  //                 }} />\n  //               {mobileNoError && <p style={{ color: 'red' }}>{mobileNoError}</p>}\n  //             </DialogContent>\n  //             <DialogActions>\n\n  //               <div style={{ textAlign: \"center\", width: \"auto\", marginTop: \"10px\" }}>\n  //                 <button style={{ width: \"auto\", marginRight: \"10px\" }} onClick={handleSave}>\n  //                   Save\n  //                 </button>\n  //                 <button style={{ width: \"auto\" }} onClick={() => handleClose(false)}>\n  //                   Cancel\n  //                 </button>\n  //               </div>\n  //             </DialogActions>\n  //         </div>\n  //           </Dialog>\n  //       {/* )} */}\n\n  //       {/* {!isPopupOpen && ( */}\n  //         <Paper sx={{ width: '100%', margin: \"0px\", overflow: 'hidden' }}>\n  //           <TableContainer sx={{ maxHeight: 440 }}>\n  //             <Table stickyHeader aria-label=\"sticky table\">\n  //               <TableHead>\n  //                 <TableRow>\n  //                   <TableCell>ID</TableCell>\n\n  //                   <TableCell>UserName</TableCell>\n  //                   <TableCell>\n  //                     <span onClick={toggleSortOrder}>\n  //                       FirstName {sortOrder === 'asc' ? <>&#9650;</> : <>&#9660;</>}\n  //                     </span>\n  //                   </TableCell>\n  //                   <TableCell><span onClick={toggleLnameSortOrder}>\n  //                     LastName {lnameSortOrder === 'asc' ? <>&#9650;</> : <>&#9660;</>}\n  //                   </span></TableCell>\n  //                   <TableCell>Password</TableCell>\n  //                   <TableCell>contry</TableCell>\n  //                   <TableCell>state</TableCell>\n  //                   <TableCell>city</TableCell>\n  //                   <TableCell>Image</TableCell>\n  //                   <TableCell>DOB</TableCell>\n  //                   <TableCell>MobileNo</TableCell>\n  //                   <TableCell style={{ display: \"inline-block\" }}>Action</TableCell>\n  //                   <Link to=\"/Add\" className='btn'><Tooltip title=\"Add User\">{<AddIcon />} </Tooltip></Link>\n  //                 </TableRow>\n  //               </TableHead>\n  //               <tbody>\n  //                 {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((person, index) => (\n  //                   <TableRow key={index}>\n  //                     <TableCell >{index + 1}</TableCell >\n\n  //                     <TableCell >{person.username}</TableCell >\n  //                     <TableCell >{person.fname}</TableCell >\n  //                     <TableCell >{person.lname}</TableCell >\n  //                     <TableCell >{person.password}</TableCell >\n  //                     <TableCell >{person.countrydata}\n  //                     </TableCell >\n\n  //                     <TableCell >{person.statedata}</TableCell >\n  //                     <TableCell >{person.citydata}</TableCell >\n  //                     <TableCell ><img style={{ width: \"50px\" }} src={`http://localhost:5000/resources/${person.image}`} /></TableCell >\n  //                     <TableCell >{moment(person.dob).format(\"MMMM Do YYYY\")}</TableCell >\n  //                     <TableCell >{person.mobileno}</TableCell >\n  //                     <Button>   <Tooltip title=\"Edit\" onClick={() => handleEdit(person)}>  <EditNoteIcon /> </Tooltip> </Button>\n  //                     <Button onClick={() => handleDelete(person._id)}>  <Tooltip title=\"Delete\">  <DeleteOutlineIcon />  </Tooltip></Button>\n  //                   </TableRow>\n  //                 ))}\n  //               </tbody>\n  //             </Table>\n  //           </TableContainer>\n  //           <TablePagination\n  //             rowsPerPageOptions={[5, 10, 25]}\n  //             component=\"div\"\n  //             count={data.length}\n  //             rowsPerPage={rowsPerPage}\n  //             page={page}\n  //             onPageChange={(event, newPage) => setPage(newPage)}\n  //             onRowsPerPageChange={(event) => {\n  //               setRowsPerPage(parseInt(event.target.value, 10));\n  //               setPage(0);\n  //             }}\n  //           />\n  //         </Paper>\n  //       {/* )} */}\n  //     </>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electronics Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Authentication Required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 524,\n    columnNumber: 3\n  }, this);\n};\n_s(Employee, \"5vAEIcuoj+uVBMoTccjUCliKKY8=\");\n_c = Employee;\nexport default Employee;\nvar _c;\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","moment","Paper","Table","TableCell","TableContainer","TableHead","TablePagination","TableRow","AddIcon","TextField","Dialog","DialogTitle","DialogContent","DialogActions","Button","EditNoteIcon","DeleteOutlineIcon","Tooltip","InputLabel","MenuItem","FormControl","Select","Box","jsxDEV","_jsxDEV","Employee","_s","data","setData","editedPerson","setEditedPerson","isPopupOpen","setIsPopupOpen","selectedImage","setSelectedImage","selectedDate","setSelectedDate","open","setOpen","editedPersonData","setEditedPersonData","usernameError","setUsernameError","fnameError","setFnameError","lnameError","setLnameError","mobileNoError","setMobileNoError","passwordError","setPasswordError","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","countrydata","setCountrydata","statedata","setStatedata","citydata","setCitydata","countries","setCountries","states","setStates","cities","setCities","sortOrder","setSortOrder","lnameSortOrder","setLnameSortOrder","page","setPage","rowsPerPage","setRowsPerPage","validateUsername","value","match","validateFname","validateLname","validatePassword","validateMobileNo","get","then","response","catch","error","console","id","sortDataByFirstName","sortedData","sort","a","b","fname","localeCompare","toggleSortOrder","sortDataByLastName","lname","toggleLnameSortOrder","fetchPersonData","token","localStorage","getItem","config","headers","Authorization","log","handleEdit","person","formattedDate","dob","format","image","handleClose","handleOpen","handleDelete","personId","confirmDelete","window","confirm","delete","prevData","filter","_id","handleInputChange","e","name","target","prevPerson","handleImageUpload","files","handleSave","formData","FormData","append","username","password","mobileno","hasErrors","alert","put","handleCountryChange","event","parsedValue","JSON","parse","handleStateChange","handleCityChange","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/day_10_08/reactapi/src/Components/Employee.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow'\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport EditNoteIcon from '@mui/icons-material/EditNote';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nimport { Box } from '@mui/material';\r\n// import jsonData from './Data.json';\r\n\r\nconst Employee = () => {\r\n  const [data, setData] = useState([]);\r\n  const [editedPerson, setEditedPerson] = useState({});\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [editedPersonData, setEditedPersonData] = useState({});\r\n\r\n  const [usernameError, setUsernameError] = useState('');\r\n  const [fnameError, setFnameError] = useState('');\r\n  const [lnameError, setLnameError] = useState('');\r\n  const [mobileNoError, setMobileNoError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedState, setSelectedState] = useState('');\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n\r\n  const[countrydata,setCountrydata] = useState(\"\")\r\n  const[statedata ,setStatedata] = useState(\"\")\r\n  const[citydata,setCitydata] = useState(\"\")\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n\r\n\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [lnameSortOrder, setLnameSortOrder] = useState('asc');\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n\r\n  const validateUsername = (value) => {\r\n    if (!value.match(/^[A-Za-z]/)) {\r\n      setUsernameError('Username must start with a letter!');\r\n    } else {\r\n      setUsernameError('');\r\n    }\r\n  };\r\n  const validateFname = (value) => {\r\n    if (!value.match(/^[A-Za-z]+$/)) {\r\n      setFnameError('Only letters are allowed!');\r\n    } else {\r\n      setFnameError('');\r\n    }\r\n  };\r\n  const validateLname = (value) => {\r\n    if (!value.match(/^[A-Za-z]+$/)) {\r\n      setLnameError('Only letters are allowed!');\r\n    } else {\r\n      setLnameError('');\r\n    }\r\n  };\r\n  const validatePassword = (value) => {\r\n    if (!value.match(/^[0-9]{1,}$/)) {\r\n      setPasswordError('only Number ')\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n  const validateMobileNo = (value) => {\r\n    if (!value.match(/^[0-9]{10}$/)) {\r\n      setMobileNoError('Mobile Number must be a 10-digit number!');\r\n    } else {\r\n      setMobileNoError('');\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    axios.get('http://localhost:5000/countries') \r\n      .then(response => setCountries(response.data))\r\n   \r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n      axios.get(`http://localhost:5000/states/${selectedCountry.id}`)\r\n        .then(response => setStates(response.data))\r\n        .catch(error => console.error(error));\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  useEffect(() => {\r\n \r\n    if (selectedState) {\r\n      axios.get(`http://localhost:5000/cities/${selectedState.id}`)\r\n        .then(response => setCities(response.data))\r\n        .catch(error => console.error(error));\r\n    }\r\n  }, [selectedState]);\r\n\r\n  const sortDataByFirstName = () => {\r\n    const sortedData = [...data];\r\n    sortedData.sort((a, b) => {\r\n      if (sortOrder === 'asc') {\r\n        return a.fname.localeCompare(b.fname);\r\n      } else {\r\n        return b.fname.localeCompare(a.fname);\r\n      }\r\n    });\r\n    setData(sortedData);\r\n  };\r\n  useEffect(() => {\r\n    sortDataByFirstName();\r\n  }, [sortOrder]);\r\n\r\n  const toggleSortOrder = () => {\r\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n  };\r\n\r\n  const sortDataByLastName = () => {\r\n    const sortedData = [...data];\r\n    sortedData.sort((a, b) => {\r\n      if (lnameSortOrder === 'asc') {\r\n        return a.lname.localeCompare(b.lname);\r\n      } else {\r\n        return b.lname.localeCompare(a.lname);\r\n      }\r\n    });\r\n    setData(sortedData);\r\n  };\r\n  useEffect(() => {\r\n    sortDataByLastName();\r\n  }, [lnameSortOrder]);\r\n\r\n  const toggleLnameSortOrder = () => {\r\n    setLnameSortOrder(lnameSortOrder === 'asc' ? 'desc' : 'asc');\r\n  };\r\n\r\n\r\n  const fetchPersonData = () => {\r\n    const token = localStorage.getItem('userToken');\r\n\r\n    if (token) {\r\n     \r\n      const config = {\r\n        headers: {\r\n          Authorization: `${token}`,\r\n        },\r\n      };\r\n\r\n    axios.get(\"http://localhost:5000/api/form\", config)\r\n      .then(response => setData(response.data))\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\n  useEffect(() => {\r\n    fetchPersonData();\r\n   \r\n  }, []);\r\n\r\n  const handleEdit = (person) => {\r\n    setEditedPerson({ ...person });\r\n    const formattedDate = moment(person.dob, 'YYYY-MM-DD').format('YYYY-MM-DD');\r\n\r\n    setSelectedDate(formattedDate);\r\n    setSelectedImage(person.image);\r\n    setSelectedCountry(\"\");\r\n    setSelectedState(\"\");\r\n    setSelectedCity(\"\");\r\n    setCountrydata(person.countrydata);\r\n  setStatedata(person.statedata);\r\n  setCitydata(person.citydata);\r\n    setIsPopupOpen(true);\r\n    setEditedPersonData(person);\r\n    setOpen(true);\r\n\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  };\r\n  \r\n \r\n  \r\n\r\n  const handleDelete = (personId) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this person?\");\r\n    if (confirmDelete) {\r\n      axios.delete(`http://localhost:5000/api/form/${personId}`)\r\n        .then(response => {\r\n\r\n          setData(prevData => prevData.filter(person => person._id !== personId));\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedPerson((prevPerson) => ({\r\n      ...prevPerson,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  const handleImageUpload = (e) => {\r\n    setSelectedImage(e.target.files[0]);\r\n  };\r\n \r\n\r\n  const handleSave = () => {\r\n    const formData = new FormData();\r\n    formData.append('username', editedPerson.username);\r\n    formData.append('fname', editedPerson.fname);\r\n    formData.append('lname', editedPerson.lname);\r\n    formData.append('password', editedPerson.password);\r\n    formData.append('image', selectedImage);\r\n    formData.append('dob', selectedDate);\r\n    formData.append('mobileno', editedPerson.mobileno);\r\n    formData.append('countrydata', countrydata);\r\n    formData.append('statedata', statedata);\r\n    formData.append('citydata', citydata);\r\n\r\n    const hasErrors = usernameError || fnameError || lnameError || passwordError || mobileNoError \r\n    // !editedPerson.selectedCountry ||\r\n    // !editedPerson.selectedState ||\r\n    // !editedPerson.selectedCity;\r\n;\r\n    if (hasErrors) {\r\n      alert('Please fill the required details correctly!');\r\n      return;\r\n    }\r\n    axios\r\n      .put(`http://localhost:5000/api/form/${editedPerson._id}`, formData)\r\n      .then((response) => {\r\n        setOpen(false);\r\n        fetchPersonData();\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n \r\n\r\n  \r\n  const handleCountryChange = (event) => {\r\n    const parsedValue = JSON.parse(event.target.value);\r\n\r\n    setSelectedCountry(parsedValue);\r\n    setCountrydata(parsedValue.name);\r\n    setSelectedState(null);\r\n    setStatedata(null);\r\n    setSelectedCity(null);\r\n    setCitydata(null);\r\n  };\r\n\r\n  const handleStateChange = (event) => {\r\n    const parsedValue = JSON.parse(event.target.value);\r\n\r\n    setSelectedState(parsedValue);\r\n    setStatedata(parsedValue.name);\r\n    setSelectedCity(null);\r\n    setCitydata(null);\r\n  };\r\n\r\n  const handleCityChange = (event) => {\r\n    const parsedValue = JSON.parse(event.target.value);\r\n\r\n    setSelectedCity(parsedValue);\r\n    setCitydata(parsedValue.name);\r\n  };\r\n\r\n//   return (\r\n//     <>\r\n    \r\n//       <h1>Person Table</h1>\r\n     \r\n      \r\n//           <Dialog open={open} style={{width:\"100%\"}}>\r\n//         <div className=\"registration-form1\">\r\n         \r\n\r\n//             <DialogTitle><h2>Edit Person</h2></DialogTitle>\r\n//             <DialogContent >\r\n//               <Box my={1} />\r\n           \r\n//    <div>\r\n//       <FormControl  style={{width:\"50%\", display:\"flex\"}}>\r\n//         <InputLabel>Select Country:</InputLabel>\r\n//         <Select value={countrydata} onChange={handleCountryChange}>\r\n//           <MenuItem value={countrydata}>{countrydata}</MenuItem>\r\n//           {countries.map((country) => (\r\n//             <MenuItem key={country.id} value={JSON.stringify(country)}>\r\n//               {country.name}\r\n//             </MenuItem>\r\n//           ))}\r\n//         </Select>\r\n//       </FormControl>\r\n\r\n//       <FormControl  style={{width:\"50%\", display:\"flex\"}}>\r\n//         <InputLabel>Select State:</InputLabel>\r\n//         <Select value={statedata} onChange={handleStateChange}>\r\n//           <MenuItem value={statedata}>{statedata}</MenuItem>\r\n//           {states.map((state) => (\r\n//             <MenuItem key={state.id} value={JSON.stringify(state)}>\r\n//               {state.name}\r\n//             </MenuItem>\r\n//           ))}\r\n//         </Select>\r\n//       </FormControl>\r\n\r\n//       <FormControl  style={{width:\"50%\", display:\"flex\"}}>\r\n//         <InputLabel>Select City:</InputLabel>\r\n//         <Select value={citydata} onChange={handleCityChange}>\r\n//           <MenuItem value={citydata}>{citydata}</MenuItem>\r\n//           {cities.map((city) => (\r\n//             <MenuItem key={city.id} value={JSON.stringify(city)}>\r\n//               {city.name}\r\n//             </MenuItem>\r\n//           ))}\r\n//         </Select>\r\n//       </FormControl>\r\n//     </div>\r\n      \r\n//               <TextField\r\n//                 margin=\"dense\"\r\n//                 name=\"username\"\r\n//                 label=\"Username:\"\r\n//                 type=\"text\"\r\n//                 fullWidth\r\n//                 variant=\"standard\"\r\n//                 value={editedPerson.username || \"\"}\r\n//                 onChange={(e) => { handleInputChange(e); validateUsername(e.target.value); }} />\r\n//               {usernameError && <p style={{ color: 'red' }}>{usernameError}</p>}\r\n\r\n//               <TextField\r\n//                 margin=\"dense\"\r\n//                 label=\" First Name:\"\r\n//                 type=\"text\"\r\n//                 fullWidth\r\n//                 variant=\"standard\"\r\n//                 name=\"fname\"\r\n//                 value={editedPerson.fname || \"\"}\r\n//                 onChange={(e) => { handleInputChange(e); validateFname(e.target.value); }} />\r\n//               {fnameError && <p style={{ color: 'red' }}>{fnameError}</p>}\r\n\r\n//               <TextField\r\n//                 margin=\"dense\"\r\n//                 label=\"  Last Name:\"\r\n//                 type=\"text\"\r\n//                 fullWidth\r\n//                 variant=\"standard\"\r\n//                 name=\"lname\"\r\n//                 value={editedPerson.lname || \"\"}\r\n//                 onChange={(e) => { handleInputChange(e); validateLname(e.target.value); }} />\r\n//               {lnameError && <p style={{ color: 'red' }}>{lnameError}</p>}\r\n\r\n//               <TextField\r\n//                 margin=\"dense\"\r\n//                 label=\" Password:\"\r\n//                 type=\"text\"\r\n//                 fullWidth\r\n//                 variant=\"standard\"\r\n//                 name=\"password\"\r\n//                 value={editedPerson.password}\r\n//                 onChange={(e) => { handleInputChange(e); validatePassword(e.target.value); }} />\r\n//               {passwordError && <p style={{ color: 'red' }}>{passwordError}</p>}\r\n\r\n//               <TextField\r\n//                 margin=\"dense\"\r\n//                 id=\"outlined-multiline-static\"\r\n//                 label=\"upload image\"\r\n          \r\n//                 type=\"file\"\r\n//                 fullWidth\r\n//                 variant=\"standard\"\r\n//                 accept=\"image/*\"\r\n//                 name=\"image\" focused \r\n//                 onChange={handleImageUpload} />\r\n//               <img style={{ width: \"100px\" }} src={`http://localhost:3000/resources/${selectedImage}`} />\r\n\r\n//               <TextField\r\n//                 margin=\"dense\"\r\n//                 label=\" Date of Birth:\"\r\n//                 type=\"date\"\r\n//                 fullWidth\r\n//                 variant=\"standard\"\r\n//                 name=\"dob\"\r\n//                 value={selectedDate}\r\n//                 onChange={(e) => setSelectedDate(e.target.value)} />\r\n\r\n//               <TextField\r\n//                 margin=\"dense\"\r\n//                 label=\" Mobile No:\"\r\n//                 type=\"text\"\r\n//                 fullWidth\r\n//                 variant=\"standard\"\r\n//                 name=\"mobileno\"\r\n//                 value={editedPerson.mobileno || \"\"}\r\n//                 onChange={(e) => {\r\n//                   handleInputChange(e); validateMobileNo(e.target.value);\r\n//                 }} />\r\n//               {mobileNoError && <p style={{ color: 'red' }}>{mobileNoError}</p>}\r\n//             </DialogContent>\r\n//             <DialogActions>\r\n\r\n//               <div style={{ textAlign: \"center\", width: \"auto\", marginTop: \"10px\" }}>\r\n//                 <button style={{ width: \"auto\", marginRight: \"10px\" }} onClick={handleSave}>\r\n//                   Save\r\n//                 </button>\r\n//                 <button style={{ width: \"auto\" }} onClick={() => handleClose(false)}>\r\n//                   Cancel\r\n//                 </button>\r\n//               </div>\r\n//             </DialogActions>\r\n//         </div>\r\n//           </Dialog>\r\n//       {/* )} */}\r\n\r\n//       {/* {!isPopupOpen && ( */}\r\n//         <Paper sx={{ width: '100%', margin: \"0px\", overflow: 'hidden' }}>\r\n//           <TableContainer sx={{ maxHeight: 440 }}>\r\n//             <Table stickyHeader aria-label=\"sticky table\">\r\n//               <TableHead>\r\n//                 <TableRow>\r\n//                   <TableCell>ID</TableCell>\r\n                \r\n//                   <TableCell>UserName</TableCell>\r\n//                   <TableCell>\r\n//                     <span onClick={toggleSortOrder}>\r\n//                       FirstName {sortOrder === 'asc' ? <>&#9650;</> : <>&#9660;</>}\r\n//                     </span>\r\n//                   </TableCell>\r\n//                   <TableCell><span onClick={toggleLnameSortOrder}>\r\n//                     LastName {lnameSortOrder === 'asc' ? <>&#9650;</> : <>&#9660;</>}\r\n//                   </span></TableCell>\r\n//                   <TableCell>Password</TableCell>\r\n//                   <TableCell>contry</TableCell>\r\n//                   <TableCell>state</TableCell>\r\n//                   <TableCell>city</TableCell>\r\n//                   <TableCell>Image</TableCell>\r\n//                   <TableCell>DOB</TableCell>\r\n//                   <TableCell>MobileNo</TableCell>\r\n//                   <TableCell style={{ display: \"inline-block\" }}>Action</TableCell>\r\n//                   <Link to=\"/Add\" className='btn'><Tooltip title=\"Add User\">{<AddIcon />} </Tooltip></Link>\r\n//                 </TableRow>\r\n//               </TableHead>\r\n//               <tbody>\r\n//                 {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((person, index) => (\r\n//                   <TableRow key={index}>\r\n//                     <TableCell >{index + 1}</TableCell >\r\n                \r\n//                     <TableCell >{person.username}</TableCell >\r\n//                     <TableCell >{person.fname}</TableCell >\r\n//                     <TableCell >{person.lname}</TableCell >\r\n//                     <TableCell >{person.password}</TableCell >\r\n//                     <TableCell >{person.countrydata}\r\n//                     </TableCell >\r\n                   \r\n//                     <TableCell >{person.statedata}</TableCell >\r\n//                     <TableCell >{person.citydata}</TableCell >\r\n//                     <TableCell ><img style={{ width: \"50px\" }} src={`http://localhost:5000/resources/${person.image}`} /></TableCell >\r\n//                     <TableCell >{moment(person.dob).format(\"MMMM Do YYYY\")}</TableCell >\r\n//                     <TableCell >{person.mobileno}</TableCell >\r\n//                     <Button>   <Tooltip title=\"Edit\" onClick={() => handleEdit(person)}>  <EditNoteIcon /> </Tooltip> </Button>\r\n//                     <Button onClick={() => handleDelete(person._id)}>  <Tooltip title=\"Delete\">  <DeleteOutlineIcon />  </Tooltip></Button>\r\n//                   </TableRow>\r\n//                 ))}\r\n//               </tbody>\r\n//             </Table>\r\n//           </TableContainer>\r\n//           <TablePagination\r\n//             rowsPerPageOptions={[5, 10, 25]}\r\n//             component=\"div\"\r\n//             count={data.length}\r\n//             rowsPerPage={rowsPerPage}\r\n//             page={page}\r\n//             onPageChange={(event, newPage) => setPage(newPage)}\r\n//             onRowsPerPageChange={(event) => {\r\n//               setRowsPerPage(parseInt(event.target.value, 10));\r\n//               setPage(0);\r\n//             }}\r\n//           />\r\n//         </Paper>\r\n//       {/* )} */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\nreturn (\r\n  <div>\r\n    {data ? (\r\n          <div>\r\n          <h1>Electronics Items</h1>\r\n        \r\n        </div>\r\n    ) : (\r\n      <h2>Authentication Required</h2>\r\n    )}\r\n  \r\n    \r\n  </div>\r\n);\r\n};\r\nexport default Employee;"],"mappings":"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AkB,CAAC8F,WAAW,CAAC;IAC/BxF,cAAc,CAACwF,WAAW,CAACjB,IAAI,CAAC;IAChC3E,gBAAgB,CAAC,IAAI,CAAC;IACtBM,YAAY,CAAC,IAAI,CAAC;IAClBJ,eAAe,CAAC,IAAI,CAAC;IACrBM,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMuF,iBAAiB,GAAIJ,KAAK,IAAK;IACnC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACf,MAAM,CAACpD,KAAK,CAAC;IAElDxB,gBAAgB,CAAC4F,WAAW,CAAC;IAC7BtF,YAAY,CAACsF,WAAW,CAACjB,IAAI,CAAC;IAC9BzE,eAAe,CAAC,IAAI,CAAC;IACrBM,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMwF,gBAAgB,GAAIL,KAAK,IAAK;IAClC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACf,MAAM,CAACpD,KAAK,CAAC;IAElDtB,eAAe,CAAC0F,WAAW,CAAC;IAC5BpF,WAAW,CAACoF,WAAW,CAACjB,IAAI,CAAC;EAC/B,CAAC;;EAEH;EACA;;EAEA;;EAGA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEzG,OAAA;IAAA+H,QAAA,EACG5H,IAAI,gBACCH,OAAA;MAAA+H,QAAA,eACA/H,OAAA;QAAA+H,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,gBAERnI,OAAA;MAAA+H,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAER,CAAC;AAACjI,EAAA,CAzfID,QAAQ;AAAAmI,EAAA,GAARnI,QAAQ;AA0fd,eAAeA,QAAQ;AAAC,IAAAmI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}